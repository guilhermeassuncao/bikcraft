/* Números, Comprimentos e Porcentagens

    Existem vários tipos de valores numéricos que você pode usar em CSS. Todos os itens a seguir são classificados como numéricos:

        - <integer>: Um <integer> é um número inteiro, como 1024 ou -55;

        - <number>: Um <number> representa um número decimal - pode ou não ter um ponto decimal com um componente fracionário. Por exemplo, 0,255, 128 ou -1,2;

        - <dimension>: Uma <dimension> é um <number> com uma unidade anexada a ele. Por exemplo, 45deg, 5s ou 10px. <dimension> é uma categoria abrangente que inclui os tipos <length>, <angle>, <time> e <resolution>;

        - <percentage>: Um <percentage> representa uma fração de algum outro valor. Por exemplo, 50%. Os valores percentuais são sempre relativos a outra quantidade. Por exemplo, o comprimento de um elemento é relativo ao comprimento de seu elemento pai.

*/

/* Números

    Alguns tipos de valor aceitam números, sem nenhuma unidade adicionada a eles. Um exemplo de propriedade que aceita um número sem unidade é a propriedade opacity, que controla a opacidade de um elemento (quão transparente ele é). Esta propriedade aceita um número entre 0 (totalmente transparente) e 1 (totalmente opaco).

*/

/* Comprimentos

    O tipo numérico que você encontrará com mais frequência é <comprimento>. Por exemplo, 10px (pixels) ou 30em. Existem dois tipos de comprimentos usados ​​em CSS - relativos e absolutos. É importante saber a diferença para entender o quão grande as coisas se tornarão.

        Unidades de Comprimento Absoluto

            A maioria dessas unidades é mais útil quando usada para impressão, em vez de saída de tela. Por exemplo, normalmente não usamos cm (centímetros) na tela. O único valor que você normalmente usará é px (pixels).

                - px (Pixels).


        Unidades de Comprimento Relativo

            As unidades de comprimento relativo são relativas a alguma outra coisa, talvez o tamanho da fonte do elemento pai ou o tamanho da janela de visualização. A vantagem de usar unidades relativas é que, com um planejamento cuidadoso, você pode fazer com que o tamanho do texto ou outro elemento seja dimensionado em relação a tudo o mais na página. Algumas das unidades mais úteis para desenvolvimento web estão listadas na tabela abaixo.

                - em: Tamanho da fonte do pai, no caso de propriedades tipográficas, como tamanho da fonte, e tamanho da fonte do próprio elemento, no caso de outras propriedades, como largura;

                - rem: Tamanho da fonte do elemento raiz;

                - vw: 1% da largura da janela de visualização;

                - vh: 1% da altura da janela de visualização;

                - vmin: 1% da dimensão menor da janela de visualização;

                - vmax: 1% da dimensão maior da janela de visualização.

            Ems e Rems

                Em e rem são os dois comprimentos relativos que você provavelmente encontrará com mais frequência ao dimensionar qualquer coisa, de caixas a texto. Vale a pena entender como eles funcionam e as diferenças entre eles, especialmente quando você começar a abordar assuntos mais complexos, como estilo de texto ou layout CSS. O exemplo a seguir fornece uma demonstração.
                
                O HTML é um conjunto de listas aninhadas - temos três listas no total e ambos os exemplos têm o mesmo HTML. A única diferença é que o primeiro tem uma classe de ems e o segundo uma classe de rems.

                Para começar, definimos 16px como o tamanho da fonte no elemento <html>.

                Para recapitular, a unidade "em" significa "tamanho da fonte do meu elemento pai" no caso da tipografia. Os elementos <li> dentro de <ul> com uma classe de ems são dimensionados de seu pai. Assim, cada nível sucessivo de aninhamento fica progressivamente maior, pois cada um tem seu tamanho de fonte definido como 1,3em - 1,3 vezes o tamanho da fonte pai.

                Para recapitular, a unidade "rem" significa "O tamanho da fonte do elemento raiz". (rem significa "root em".) Os elementos <li> dentro de <ul> com uma classe de rems são dimensionados a partir do elemento raiz (<html>). Isso significa que cada nível sucessivo de aninhamento não fica cada vez maior.

                No entanto, se você alterar o <html> tamanho da fonte no CSS, verá que todo o resto muda em relação a ele - texto em tamanho rem e em.

                    html {
                        font-size: 16px;
                    }

                    .ems li {
                        font-size: 1.3em;
                    }

                    .rems li {
                        font-size: 1.3rem;
                    }

                    <ul class="ems">
                        <li>One</li>
                        <li>Two</li>
                        <li>
                            Three
                            <ul>
                                <li>Three A</li>
                                <li>
                                    Three B
                                    <ul>
                                        <li>Three B 2</li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>

                    <ul class="rems">
                        <li>One</li>
                        <li>Two</li>
                        <li>
                            Three
                            <ul>
                                <li>Three A</li>
                                <li>
                                    Three B
                                    <ul>
                                        <li>Three B 2</li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                    </ul>

*/

/* Porcentagens

    Em muitos casos, uma porcentagem é tratada da mesma maneira que um comprimento. O que acontece com as porcentagens é que elas sempre são definidas em relação a algum outro valor. Por exemplo, se você definir o tamanho da fonte de um elemento como uma porcentagem, será uma porcentagem do tamanho da fonte do elemento pai. Se você usar uma porcentagem para um valor de largura, será uma porcentagem da largura do pai.

    O exemplo possui tamanhos de fonte definidos em porcentagens. Cada <li> tem um tamanho de fonte de 80%, portanto, os itens da lista aninhada tornam-se progressivamente menores à medida que herdam o tamanho de seu pai.    
     
        li {
            font-size: 80%;
        }
  
        <ul>
            <li>One</li>
            <li>Two</li>
            <li>
                Three
                <ul>
                    <li>Three A</li>
                    <li>
                        Three B
                        <ul>
                            <li>Three B 2</li>
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>

*/
